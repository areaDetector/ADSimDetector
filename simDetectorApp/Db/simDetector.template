#=================================================================#
# Template file: simDetector.template
# Database for the records specific to the simulated detector driver
# Mark Rivers
# March 23, 2008

include "ADBase.template"

# Redefine the color mode choices from ADBase.template to only have those that the simDetector
# driver supports.  Keep the same values (xxVL), but change the menu numbers.

record(bo, "$(P)$(R)TimeStampMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
}

record(bi, "$(P)$(R)TimeStampMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)ColorMode")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "RGB1")
   field(ONVL, "2")
   field(TWST, "RGB2")
   field(TWVL, "3")
   field(THST, "RGB3")
   field(THVL, "4")
   field(FRST, "")
   field(FVST, "")
   field(SXST, "")
   field(SVST, "")
   field(EIST, "")
}

record(mbbi, "$(P)$(R)ColorMode_RBV")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "RGB1")
   field(ONVL, "2")
   field(TWST, "RGB2")
   field(TWVL, "3")
   field(THST, "RGB3")
   field(THVL, "4")
   field(FRST, "")
   field(FVST, "")
   field(SXST, "")
   field(SVST, "")
   field(EIST, "")
}


# New records for simulation detector
record(ao, "$(P)$(R)GainX")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_X")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainX_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_X")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainY")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_Y")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainY_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_Y")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainRed")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_RED")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainRed_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_RED")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainGreen")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_GREEN")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainGreen_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_GREEN")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainBlue")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_BLUE")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainBlue_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_BLUE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)Reset")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_IMAGE")
}

record(longin, "$(P)$(R)Reset_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_IMAGE")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Offset")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_OFFSET")
   field(PREC, "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)Offset_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_OFFSET")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Noise")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_NOISE")
   field(PREC, "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)Noise_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_NOISE")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)SimMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_MODE")
   field(ZRST, "LinearRamp")
   field(ZRVL, "0")
   field(ONST, "Peaks")
   field(ONVL, "1")
   field(TWST, "Sine")
   field(TWVL, "2")
   field(THST, "Offset&Noise")
   field(THVL, "3")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)SimMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_MODE")
   field(ZRST, "LinearRamp")
   field(ZRVL, "0")
   field(ONST, "Peaks")
   field(ONVL, "1")
   field(TWST, "Sine")
   field(TWVL, "2")
   field(THST, "Offset&Noise")
   field(THVL, "3")
   field(SCAN, "I/O Intr")
}

# Records for peak simulation mode
record(longout, "$(P)$(R)PeakStartX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStartX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakStartY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStartY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_Y")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakNumX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakNumX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakNumY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakNumY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_Y")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakStepX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStepX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakStepY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStepY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_Y")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakWidthX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakWidthX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakWidthY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakWidthY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_Y")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)PeakVariation")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_HEIGHT_VARIATION")
   field(PREC, "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)PeakVariation_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_HEIGHT_VARIATION")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
}

# Records for sine wave simulation mode
record(mbbo, "$(P)$(R)XSineOperation")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE_OPERATION")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)XSineOperation_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE_OPERATION")
   field(ZRST, "LinearRamp")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine1Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine1Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine1Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine1Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine1Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_PHASE")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine1Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine2Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine2Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine2Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine2Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine2Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_PHASE")
   field(PREC, "2")
   field(VAL,  "90")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine2Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)YSineOperation")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE_OPERATION")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)YSineOperation_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE_OPERATION")
   field(ZRST, "LinearRamp")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine1Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine1Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine1Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine1Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine1Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_PHASE")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine1Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine2Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine2Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine2Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine2Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine2Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_PHASE")
   field(PREC, "2")
   field(VAL,  "90")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine2Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

